// Generated by CoffeeScript 1.10.0
var Application, CozyInstance, CozyUser, cozydb, fs, localizationManager, logs;

cozydb = require('cozydb');

fs = require('fs');

CozyInstance = require('../models/cozyinstance');

CozyUser = require('../models/user');

Application = require('../models/application');

logs = require('../lib/logs');

localizationManager = require('../helpers/localization_manager');

module.exports = {
  message: function(req, res, next) {
    return CozyUser.first(function(err, user) {
      return CozyInstance.first(function(err, instance) {
        var content, domain, email, infos, locale, onLogs, public_name;
        locale = instance.locale, domain = instance.domain;
        email = user.email, public_name = user.public_name;
        infos = {
          locale: locale,
          domain: domain
        };
        content = '\n\n---- User config\n\n';
        content += JSON.stringify({
          locale: locale,
          domain: domain
        }) + '\n';
        content += JSON.stringify({
          email: email,
          public_name: public_name
        }) + '\n';
        content += '\n\n---- User message\n\n';
        content += req.body.messageText;
        onLogs = function(err, path) {
          var data;
          if (err) {
            console.log(err);
          }
          data = {
            to: "support@cozycloud.cc",
            'reply-to': email,
            subject: localizationManager.t("ask for assistance"),
            content: content
          };
          if (path != null) {
            data.attachments = [
              {
                path: path,
                contentType: "application/x-compressed-tar"
              }
            ];
          }
          return cozydb.api.sendMailFromUser(data, function(err) {
            if (path != null) {
              fs.unlink(path);
            }
            if (err) {
              return next(err);
            }
            return res.send({
              success: localizationManager.t('mail successully sent')
            });
          });
        };
        if (req.body.sendLogs) {
          return logs.getCompressLogs(onLogs);
        } else {
          return onLogs();
        }
      });
    });
  }
};
